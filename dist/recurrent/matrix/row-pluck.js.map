{"version":3,"sources":["../../../src/recurrent/matrix/row-pluck.js"],"names":["rowPluck","into","m","rowIndex","column","columns","weights","recurrence"],"mappings":";;;;;kBAKwBA,Q;AALxB;;;;;AAKe,SAASA,QAAT,CAAkBC,IAAlB,EAAwBC,CAAxB,EAA2BC,QAA3B,EAAqC;AAClD,OAAK,IAAIC,SAAS,CAAb,EAAgBC,UAAUH,EAAEG,OAAjC,EAA0CD,SAASC,OAAnD,EAA4DD,QAA5D,EAAsE;AACpEH,SAAKK,OAAL,CAAaF,MAAb,IAAuBF,EAAEI,OAAF,CAAUD,UAAUF,QAAV,GAAqBC,MAA/B,CAAvB;AACAH,SAAKM,UAAL,CAAgBH,MAAhB,IAA0B,CAA1B;AACD;AACF","file":"row-pluck.js","sourcesContent":["/**\n * @param {Matrix} into\n * @param {Matrix} m\n * @param {Number} rowIndex\n */\nexport default function rowPluck(into, m, rowIndex) {\n  for (let column = 0, columns = m.columns; column < columns; column++) {\n    into.weights[column] = m.weights[columns * rowIndex + column];\n    into.recurrence[column] = 0;\n  }\n}\n"]}