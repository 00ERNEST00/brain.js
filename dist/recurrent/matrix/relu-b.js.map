{"version":3,"sources":["../../../src/recurrent/matrix/relu-b.js"],"names":["reluB","product","left","i","recurrence","length","weights"],"mappings":";;;;;kBAKwBA,K;AALxB;;;;;AAKe,SAASA,KAAT,CAAeC,OAAf,EAAwBC,IAAxB,EAA8B;AAC3C,OAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAIF,QAAQG,UAAR,CAAmBC,MAAtC,EAA8CF,GAA9C,EAAmD;AACjDD,SAAKE,UAAL,CAAgBD,CAAhB,IAAqBD,KAAKI,OAAL,CAAaH,CAAb,IAAkB,CAAlB,GAAsBF,QAAQG,UAAR,CAAmBD,CAAnB,CAAtB,GAA8C,CAAnE;AACD;AACF","file":"relu-b.js","sourcesContent":["/**\n * adds {from} recurrence to {m} recurrence when {m} weights are above other a threshold of 0\n * @param {Matrix} product\n * @param {Matrix} m\n */\nexport default function reluB(product, left) {\n  for(let i = 0; i < product.recurrence.length; i++) {\n    left.recurrence[i] = left.weights[i] > 0 ? product.recurrence[i] : 0;\n  }\n}\n"]}