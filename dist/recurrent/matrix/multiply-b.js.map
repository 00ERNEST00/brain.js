{"version":3,"sources":["../../../src/recurrent/matrix/multiply-b.js"],"names":["multiplyB","from","left","right","leftRows","rows","leftColumns","columns","rightColumns","leftRow","rightColumn","leftColumn","backPropagateValue","recurrence","weights"],"mappings":";;;;;kBAMwBA,S;AANxB;;;;;;AAMe,SAASA,SAAT,CAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,KAA/B,EAAsC;AACnD,MAAIC,WAAWF,KAAKG,IAApB;AACA,MAAIC,cAAcJ,KAAKK,OAAvB;AACA,MAAIC,eAAeL,MAAMI,OAAzB;;AAEA;AACA,OAAI,IAAIE,UAAU,CAAlB,EAAqBA,UAAUL,QAA/B,EAAyCK,SAAzC,EAAoD;;AAElD;AACA,SAAI,IAAIC,cAAc,CAAtB,EAAyBA,cAAcF,YAAvC,EAAqDE,aAArD,EAAoE;;AAElE;AACA,WAAI,IAAIC,aAAa,CAArB,EAAwBA,aAAaL,WAArC,EAAkDK,YAAlD,EAAgE;AAC9D,YAAIC,qBAAqBX,KAAKY,UAAL,CAAgBL,eAAeC,OAAf,GAAyBC,WAAzC,CAAzB;AACAR,aAAKW,UAAL,CAAgBP,cAAcG,OAAd,GAAwBE,UAAxC,KAAuDR,MAAMW,OAAN,CAAcN,eAAeG,UAAf,GAA4BD,WAA1C,IAAyDE,kBAAhH;AACAT,cAAMU,UAAN,CAAiBL,eAAeG,UAAf,GAA4BD,WAA7C,KAA6DR,KAAKY,OAAL,CAAaR,cAAcG,OAAd,GAAwBE,UAArC,IAAmDC,kBAAhH;AACD;AACF;AACF;AACF","file":"multiply-b.js","sourcesContent":["/**\n * multiplies {from} recurrence to {left} and {right}\n * @param {Matrix} from\n * @param {Matrix} left\n * @param {Matrix} right\n */\nexport default function multiplyB(from, left, right) {\n  let leftRows = left.rows;\n  let leftColumns = left.columns;\n  let rightColumns = right.columns;\n\n  // loop over rows of left\n  for(let leftRow = 0; leftRow < leftRows; leftRow++) {\n\n    // loop over cols of right\n    for(let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\n\n      //loop over columns of left\n      for(let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\n        let backPropagateValue = from.recurrence[rightColumns * leftRow + rightColumn];\n        left.recurrence[leftColumns * leftRow + leftColumn] += right.weights[rightColumns * leftColumn + rightColumn] * backPropagateValue;\n        right.recurrence[rightColumns * leftColumn + rightColumn] += left.weights[leftColumns * leftRow + leftColumn] * backPropagateValue;\n      }\n    }\n  }\n}\n"]}