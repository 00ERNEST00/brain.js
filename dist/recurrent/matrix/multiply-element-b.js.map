{"version":3,"sources":["../../../src/recurrent/matrix/multiply-element-b.js"],"names":["multiplyElementB","product","left","right","i","weights","length","recurrence"],"mappings":";;;;;kBAMwBA,gB;AANxB;;;;;;AAMe,SAASA,gBAAT,CAA0BC,OAA1B,EAAmCC,IAAnC,EAAyCC,KAAzC,EAAgD;AAC7D,OAAI,IAAIC,IAAI,CAAR,EAAWC,UAAUH,KAAKG,OAAL,CAAaC,MAAtC,EAA8CF,IAAIC,OAAlD,EAA2DD,GAA3D,EAAgE;AAC9DF,SAAKK,UAAL,CAAgBH,CAAhB,KAAsBD,MAAME,OAAN,CAAcD,CAAd,IAAmBH,QAAQM,UAAR,CAAmBH,CAAnB,CAAzC;AACAD,UAAMI,UAAN,CAAiBH,CAAjB,KAAuBF,KAAKG,OAAL,CAAaD,CAAb,IAAkBH,QAAQM,UAAR,CAAmBH,CAAnB,CAAzC;AACD;AACF","file":"multiply-element-b.js","sourcesContent":["/**\n * multiplies {left} and {right} weight by {from} recurrence into {left} and {right} recurrence\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nexport default function multiplyElementB(product, left, right) {\n  for(let i = 0, weights = left.weights.length; i < weights; i++) {\n    left.recurrence[i] += right.weights[i] * product.recurrence[i];\n    right.recurrence[i] += left.weights[i] * product.recurrence[i];\n  }\n}\n"]}