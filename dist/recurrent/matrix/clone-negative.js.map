{"version":3,"sources":["../../../src/recurrent/matrix/clone-negative.js"],"names":["cloneNegative","m","cloned","rows","parseInt","columns","i","max","weights","length","recurrence"],"mappings":";;;;;kBAMwBA,a;;AANxB;;;;;;AAEA;;;;AAIe,SAASA,aAAT,CAAuBC,CAAvB,EAA0B;AACvC,MAAIC,SAAS,gBAAb;AACAA,SAAOC,IAAP,GAAcC,SAASH,EAAEE,IAAX,CAAd;AACAD,SAAOG,OAAP,GAAiBD,SAASH,EAAEI,OAAX,CAAjB;;AAEA,OAAK,IAAIC,IAAI,CAAR,EAAWC,MAAMN,EAAEO,OAAF,CAAUC,MAAhC,EAAwCH,IAAIC,GAA5C,EAAiDD,GAAjD,EAAsD;AACpDJ,WAAOM,OAAP,CAAeF,CAAf,IAAoB,CAACL,EAAEO,OAAF,CAAUF,CAAV,CAArB;AACAJ,WAAOQ,UAAP,CAAkBJ,CAAlB,IAAuB,CAACL,EAAES,UAAF,CAAaJ,CAAb,CAAxB;AACD;AACD,SAAOJ,MAAP;AACD","file":"clone-negative.js","sourcesContent":["import Matrix from './';\n\n/**\n *\n * @param {Matrix} m\n */\nexport default function cloneNegative(m) {\n  let cloned = new Matrix();\n  cloned.rows = parseInt(m.rows);\n  cloned.columns = parseInt(m.columns);\n\n  for (let i = 0, max = m.weights.length; i < max; i++) {\n    cloned.weights[i] = -m.weights[i];\n    cloned.recurrence[i] = -m.recurrence[i];\n  }\n  return cloned;\n}\n"]}