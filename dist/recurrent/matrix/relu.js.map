{"version":3,"sources":["../../../src/recurrent/matrix/relu.js"],"names":["relu","product","left","i","max","weights","length","Math","recurrence"],"mappings":";;;;;kBAMwBA,I;AANxB;;;;;;AAMe,SAASA,IAAT,CAAcC,OAAd,EAAuBC,IAAvB,EAA6B;AAC1C,OAAI,IAAIC,IAAI,CAAR,EAAWC,MAAMF,KAAKG,OAAL,CAAaC,MAAlC,EAA0CH,IAAIC,GAA9C,EAAmDD,GAAnD,EAAwD;AACtDF,YAAQI,OAAR,CAAgBF,CAAhB,IAAqBI,KAAKH,GAAL,CAAS,CAAT,EAAYF,KAAKG,OAAL,CAAaF,CAAb,CAAZ,CAArB,CADsD,CACH;;AAEnD;AACAF,YAAQO,UAAR,CAAmBL,CAAnB,IAAwB,CAAxB;AACAD,SAAKM,UAAL,CAAgBL,CAAhB,IAAqB,CAArB;AACD;AACF","file":"relu.js","sourcesContent":["/**\n *\n * relu {m} weights to {into} weights\n * @param {Matrix} product\n * @param {Matrix} left\n */\nexport default function relu(product, left) {\n  for(let i = 0, max = left.weights.length; i < max; i++) {\n    product.weights[i] = Math.max(0, left.weights[i]); // relu\n\n    //TODO: needed?\n    product.recurrence[i] = 0;\n    left.recurrence[i] = 0;\n  }\n}\n"]}