{"version":3,"sources":["../../../src/recurrent/matrix/random-matrix.js"],"names":["RandomMatrix","rows","columns","std","weights","recurrence","fill","i","max","length"],"mappings":";;;;;;;;AAAA;;;;AAEA;;;;;;IAMqBA,Y;AACnB,wBAAYC,IAAZ,EAAkBC,OAAlB,EAA2BC,GAA3B,EAAgC;AAAA;;AAC9B,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,IAAL;AACD;;AAED;;;;;2BACO;AACL,UAAI,CAAC,KAAKH,GAAV,EAAe;AACf,WAAI,IAAII,IAAI,CAAR,EAAWC,MAAM,KAAKJ,OAAL,CAAaK,MAAlC,EAA0CF,IAAIC,GAA9C,EAAmDD,GAAnD,EAAwD;AACtD,aAAKH,OAAL,CAAaG,CAAb,IAAkB,qBAAQ,CAAC,KAAKJ,GAAd,EAAmB,KAAKA,GAAxB,CAAlB;AACA,aAAKE,UAAL,CAAgBE,CAAhB,IAAqB,qBAAQ,CAAC,KAAKJ,GAAd,EAAmB,KAAKA,GAAxB,CAArB;AACD;AACF;;;;;;kBAjBkBH,Y","file":"random-matrix.js","sourcesContent":["import { randomF } from '../random';\n\n/** return Matrix but filled with random numbers from gaussian\n * @param {Number} [rows]\n * @param {Number} [columns]\n * @param std\n * @constructor\n */\nexport default class RandomMatrix {\n  constructor(rows, columns, std) {\n    this.rows = rows;\n    this.columns = columns;\n    this.std = std;\n    this.weights = [];\n    this.recurrence = [];\n    this.fill();\n  }\n\n  // fill matrix with random gaussian numbers\n  fill() {\n    if (!this.std) return;\n    for(let i = 0, max = this.weights.length; i < max; i++) {\n      this.weights[i] = randomF(-this.std, this.std);\n      this.recurrence[i] = randomF(-this.std, this.std);\n    }\n  }\n}\n"]}