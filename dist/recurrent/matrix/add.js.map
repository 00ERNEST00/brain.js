{"version":3,"sources":["../../../src/recurrent/matrix/add.js"],"names":["add","product","left","right","i","max","weights","length","recurrence"],"mappings":";;;;;kBAMwBA,G;AANxB;;;;;;AAMe,SAASA,GAAT,CAAaC,OAAb,EAAsBC,IAAtB,EAA4BC,KAA5B,EAAmC;AAChD,OAAI,IAAIC,IAAI,CAAR,EAAWC,MAAMH,KAAKI,OAAL,CAAaC,MAAlC,EAA0CH,IAAIC,GAA9C,EAAmDD,GAAnD,EAAwD;AACtDH,YAAQK,OAAR,CAAgBF,CAAhB,IAAqBF,KAAKI,OAAL,CAAaF,CAAb,IAAkBD,MAAMG,OAAN,CAAcF,CAAd,CAAvC;;AAEA;AACAH,YAAQO,UAAR,CAAmBJ,CAAnB,IAAwB,CAAxB;AACAF,SAAKM,UAAL,CAAgBJ,CAAhB,IAAqB,CAArB;AACAD,UAAMK,UAAN,CAAiBJ,CAAjB,IAAsB,CAAtB;AACD;AACF","file":"add.js","sourcesContent":["/**\n * add {left} and {right} matrix weights into {into}\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nexport default function add(product, left, right) {\n  for(let i = 0, max = left.weights.length; i < max; i++) {\n    product.weights[i] = left.weights[i] + right.weights[i];\n\n    //TODO: needed?\n    product.recurrence[i] = 0;\n    left.recurrence[i] = 0;\n    right.recurrence[i] = 0;\n  }\n}\n"]}