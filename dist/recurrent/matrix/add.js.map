{"version":3,"sources":["../../../src/recurrent/matrix/add.js"],"names":["add","into","left","right","i","max","weights","length","recurrence"],"mappings":";;;;;kBAMwBA,G;AANxB;;;;;;AAMe,SAASA,GAAT,CAAaC,IAAb,EAAmBC,IAAnB,EAAyBC,KAAzB,EAAgC;AAC7C,OAAI,IAAIC,IAAI,CAAR,EAAWC,MAAMH,KAAKI,OAAL,CAAaC,MAAlC,EAA0CH,IAAIC,GAA9C,EAAmDD,GAAnD,EAAwD;AACtDH,SAAKK,OAAL,CAAaF,CAAb,IAAkBF,KAAKI,OAAL,CAAaF,CAAb,IAAkBD,MAAMG,OAAN,CAAcF,CAAd,CAApC;AACAH,SAAKO,UAAL,CAAgBJ,CAAhB,IAAqB,CAArB;AACD;AACF","file":"add.js","sourcesContent":["/**\n * add {left} and {right} matrix weights into {into}\n * @param {Matrix} into\n * @param {Matrix} left\n * @param {Matrix} right\n */\nexport default function add(into, left, right) {\n  for(let i = 0, max = left.weights.length; i < max; i++) {\n    into.weights[i] = left.weights[i] + right.weights[i];\n    into.recurrence[i] = 0;\n  }\n}\n"]}