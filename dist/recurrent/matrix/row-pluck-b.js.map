{"version":3,"sources":["../../../src/recurrent/matrix/row-pluck-b.js"],"names":["rowPluckB","product","left","rowIndex","columns","rowBase","column","recurrence"],"mappings":";;;;;kBAMwBA,S;AANxB;;;;;;AAMe,SAASA,SAAT,CAAmBC,OAAnB,EAA4BC,IAA5B,EAAkCC,QAAlC,EAA4C;AACzD,MAAMC,UAAUF,KAAKE,OAArB;AACA,MAAMC,UAAUD,UAAUD,QAA1B;AACA,OAAK,IAAIG,SAAS,CAAlB,EAAqBA,SAASF,OAA9B,EAAuCE,QAAvC,EAAiD;AAC/CJ,SAAKK,UAAL,CAAgBF,UAAUC,MAA1B,IAAoCL,QAAQM,UAAR,CAAmBD,MAAnB,CAApC;AACD;AACF","file":"row-pluck-b.js","sourcesContent":["/**\n * adds {from} recurrence into {m} recurrence\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Number} rowIndex\n */\nexport default function rowPluckB(product, left, rowIndex) {\n  const columns = left.columns;\n  const rowBase = columns * rowIndex;\n  for (let column = 0; column < columns; column++) {\n    left.recurrence[rowBase + column] = product.recurrence[column];\n  }\n}\n"]}