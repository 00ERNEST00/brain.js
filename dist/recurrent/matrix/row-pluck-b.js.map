{"version":3,"sources":["../../../src/recurrent/matrix/row-pluck-b.js"],"names":["rowPluckB","product","left","rowIndex","column","columns","recurrence"],"mappings":";;;;;kBAMwBA,S;AANxB;;;;;;AAMe,SAASA,SAAT,CAAmBC,OAAnB,EAA4BC,IAA5B,EAAkCC,QAAlC,EAA4C;AACzD,OAAK,IAAIC,SAAS,CAAb,EAAgBC,UAAUH,KAAKG,OAApC,EAA6CD,SAASC,OAAtD,EAA+DD,QAA/D,EAAyE;AACvEF,SAAKI,UAAL,CAAgBD,UAAUF,QAAV,GAAqBC,MAArC,KAAgDH,QAAQK,UAAR,CAAmBF,MAAnB,CAAhD;AACD;AACF","file":"row-pluck-b.js","sourcesContent":["/**\n * adds {from} recurrence into {m} recurrence\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Number} rowIndex\n */\nexport default function rowPluckB(product, left, rowIndex) {\n  for (let column = 0, columns = left.columns; column < columns; column++) {\n    left.recurrence[columns * rowIndex + column] += product.recurrence[column];\n  }\n}\n"]}