{"version":3,"sources":["../../src/utilities/relu.js"],"names":["Relu","inputs","outputs","runKernel","runBackpropagateKernel","width","height","inputDeltas","Array","length","outputDeltas","build","buildRunKernel","buildRunBackpropagateKernel","Function","runInputs","runBody","input","output","runBackpropagateInputs","runBackpropagateBody","settings","i","each","fnBody","iterate","push","join"],"mappings":";;;;;;;;AAAA;;;;;;;;IAEqBA,I;AACnB,gBAAYC,MAAZ,EAAoBC,OAApB,EAA6B;AAAA;;AAC3B,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKC,sBAAL,GAA8B,IAA9B;AACA,SAAKH,MAAL,GAAc,qBAAM,KAAKI,KAAL,GAAa,KAAKC,MAAxB,CAAd;AACA,SAAKJ,OAAL,GAAe,qBAAM,KAAKG,KAAL,GAAa,KAAKC,MAAxB,CAAf;AACA,SAAKC,WAAL,GAAmB,IAAIC,KAAJ,CAAUP,OAAOQ,MAAjB,CAAnB;AACA,SAAKC,YAAL,GAAoB,IAAIF,KAAJ,CAAUN,QAAQO,MAAlB,CAApB;AACA,SAAKE,KAAL;AACD;;;;4BAEO;AACN,WAAKC,cAAL;AACA,WAAKC,2BAAL;AACD;;;qCAgBgB;AACf,WAAKV,SAAL,GAAiB,IAAIW,QAAJ,CAAa,KAAKC,SAAlB,EAA6B,KAAKC,OAAlC,CAAjB;AACD;;;0BAEK;AACJ,WAAKb,SAAL,CAAe,KAAKc,KAApB,EAA2B,KAAKV,WAAhC,EAA6C,KAAKW,MAAlD,EAA0D,KAAKR,YAA/D;AACD;;;kDAY6B;AAC5B,WAAKN,sBAAL,GAA8B,IAAIU,QAAJ,CAAa,KAAKK,sBAAlB,EAA0C,KAAKC,oBAA/C,CAA9B;AACD;;;uCAEkB;AACjB,WAAKhB,sBAAL,CAA4B,KAAKa,KAAjC,EAAwC,KAAKV,WAA7C,EAA0D,KAAKW,MAA/D,EAAuE,KAAKR,YAA5E;AACD;;;4BAEOW,Q,EAAU;AAAA,UACRJ,KADQ,GACE,IADF,CACRA,KADQ;;AAEhB,WAAI,IAAIK,IAAI,CAAZ,EAAeA,IAAIL,MAAMR,MAAzB,EAAiCa,GAAjC,EAAsC;AACpCD,iBAASE,IAAT,CAAcD,CAAd;AACD;AACF;;;wBA7Ca;AACZ,UAAME,SAAS,EAAf;AACA,WAAKC,OAAL,CAAa;AACXF,cAAM,cAACD,CAAD,EAAO;AACXE,iBAAOE,IAAP,cACcJ,CADd,mBAC+BA,CAD/B,2BACwDA,CADxD,yBAEkBA,CAFlB,8BAGmBA,CAHnB;AAKD;AAPU,OAAb;AASA,aAAOE,OAAOG,IAAP,CAAY,OAAZ,IAAuB,GAA9B;AACD;;;wBAU0B;AACzB,UAAMH,SAAS,EAAf;AACA,WAAKC,OAAL,CAAa;AACXF,cAAM,cAACD,CAAD,EAAO;AACXE,iBAAOE,IAAP,kBAA4BJ,CAA5B,mBAA6CA,CAA7C,kCAA6EA,CAA7E;AACD;AAHU,OAAb;AAKA,aAAOE,OAAOG,IAAP,CAAY,OAAZ,IAAuB,GAA9B;AACD;;;;;;kBA9CkB3B,I;;;AAgErBA,KAAKe,SAAL,GAAiB,CACf,QADe,EAEf,aAFe,EAGf,SAHe,EAIf,cAJe,CAAjB;;AAOAf,KAAKmB,sBAAL,GAA8B,CAC5B,QAD4B,EAE5B,aAF4B,EAG5B,SAH4B,EAI5B,cAJ4B,CAA9B","file":"relu.js","sourcesContent":["import zeros from './zeros';\n\nexport default class Relu {\n  constructor(inputs, outputs) {\n    this.runKernel = null;\n    this.runBackpropagateKernel = null;\n    this.inputs = zeros(this.width * this.height);\n    this.outputs = zeros(this.width * this.height);\n    this.inputDeltas = new Array(inputs.length);\n    this.outputDeltas = new Array(outputs.length);\n    this.build();\n  }\n\n  build() {\n    this.buildRunKernel();\n    this.buildRunBackpropagateKernel();\n  }\n\n  get runBody() {\n    const fnBody = [];\n    this.iterate({\n      each: (i) => {\n        fnBody.push(\n          `outputs[${ i }] = inputs[${ i }] < 0 ? 0 : inputs[${ i }]`,\n          `inputDeltas[${ i }] = 0`,\n          `outputDeltas[${ i }] = 0`\n        );\n      }\n    });\n    return fnBody.join(';\\n  ') + ';';\n  }\n\n  buildRunKernel() {\n    this.runKernel = new Function(this.runInputs, this.runBody);\n  }\n\n  run() {\n    this.runKernel(this.input, this.inputDeltas, this.output, this.outputDeltas);\n  }\n\n  get runBackpropagateBody() {\n    const fnBody = [];\n    this.iterate({\n      each: (i) => {\n        fnBody.push(`inputDeltas[${ i }] = output[${ i }] <= 0 ? 0 : outputDeltas[${ i }]`);\n      }\n    });\n    return fnBody.join(';\\n  ') + ';';\n  }\n\n  buildRunBackpropagateKernel() {\n    this.runBackpropagateKernel = new Function(this.runBackpropagateInputs, this.runBackpropagateBody);\n  }\n\n  runBackpropagate() {\n    this.runBackpropagateKernel(this.input, this.inputDeltas, this.output, this.outputDeltas);\n  }\n\n  iterate(settings) {\n    const { input } = this;\n    for(let i = 0; i < input.length; i++) {\n      settings.each(i);\n    }\n  }\n}\n\nRelu.runInputs = [\n  'inputs',\n  'inputDeltas',\n  'outputs',\n  'outputDeltas'\n];\n\nRelu.runBackpropagateInputs = [\n  'inputs',\n  'inputDeltas',\n  'outputs',\n  'outputDeltas'\n];"]}