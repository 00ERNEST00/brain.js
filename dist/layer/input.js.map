{"version":3,"sources":["../../src/layer/input.js"],"names":["Input","predictKernel","predict","output","width","height","depth","learnKernel","inputs","weights","thread","z","y","x"],"mappings":"AAAA;;;;;;;;AAEA;;;;AACA;;;;;;;;;;;;IAEqBA,K;;;;;;;;;;;mCACJ;AACb,WAAKC,aAAL,GAAqB,0BAAWC,OAAX,EAAoB;AACvCC,gBAAQ,CAAC,KAAKC,KAAN,EAAa,KAAKC,MAAlB,EAA0B,KAAKC,KAA/B;AAD+B,OAApB,CAArB;;AAIA,WAAKC,WAAL,GAAmB,YAAM,CAAE,CAA3B;AACD;;;4BAEOC,M,EAAQ;AACd,WAAKC,OAAL,GAAe,KAAKR,aAAL,CAAmBO,MAAnB,CAAf;AACD;;;;;;kBAXkBR,K;;;AAcrB,SAASE,OAAT,CAAiBM,MAAjB,EAAyB;AACvB,SAAOA,OAAO,KAAKE,MAAL,CAAYC,CAAnB,EAAsB,KAAKD,MAAL,CAAYE,CAAlC,EAAqC,KAAKF,MAAL,CAAYG,CAAjD,CAAP;AACD","file":"input.js","sourcesContent":["'use strict';\n\nimport Base from './base';\nimport makeKernel from '../utilities/make-kernel';\n\nexport default class Input extends Base {\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height, this.depth]\n    });\n\n    this.learnKernel = () => {};\n  }\n\n  predict(inputs) {\n    this.weights = this.predictKernel(inputs);\n  }\n}\n\nfunction predict(inputs) {\n  return inputs[this.thread.z][this.thread.y][this.thread.x];\n}"]}