{"version":3,"sources":["../../src/matrix/sigmoid.js"],"names":["sigmoid","product","left","i","max","weights","length","Math","exp","recurrence","sig","x"],"mappings":";;;;;kBAIwBA,O;AAJxB;;;;AAIe,SAASA,OAAT,CAAiBC,OAAjB,EAA0BC,IAA1B,EAAgC;AAC7C;AACA,OAAI,IAAIC,IAAE,CAAN,EAASC,MAAMF,KAAKG,OAAL,CAAaC,MAAhC,EAAwCH,IAAIC,GAA5C,EAAiDD,GAAjD,EAAsD;AACpDF,YAAQI,OAAR,CAAgBF,CAAhB,IAAqB,KAAM,IAAII,KAAKC,GAAL,CAAS,CAACN,KAAKG,OAAL,CAAaF,CAAb,CAAV,CAAV,CAArB;AACAF,YAAQQ,UAAR,CAAmBN,CAAnB,IAAwB,CAAxB;AACAD,SAAKO,UAAL,CAAgBN,CAAhB,IAAqB,CAArB;AACD;AACF;;AAGD,SAASO,GAAT,CAAaC,CAAb,EAAgB;AACd;AACA,SAAO,KAAK,IAAIJ,KAAKC,GAAL,CAAS,CAACG,CAAV,CAAT,CAAP;AACD","file":"sigmoid.js","sourcesContent":["/**\n * @param {Matrix} product\n * @param {Matrix} left\n */\nexport default function sigmoid(product, left) {\n  // sigmoid nonlinearity\n  for(let i=0, max = left.weights.length; i < max; i++) {\n    product.weights[i] = 1 / ( 1 + Math.exp(-left.weights[i]));\n    product.recurrence[i] = 0;\n    left.recurrence[i] = 0;\n  }\n}\n\n\nfunction sig(x) {\n  // helper function for computing sigmoid\n  return 1 / (1 + Math.exp(-x));\n}"]}