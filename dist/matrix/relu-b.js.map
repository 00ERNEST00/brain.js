{"version":3,"sources":["../../src/matrix/relu-b.js"],"names":["reluB","product","left","i","max","weights","length","recurrence"],"mappings":";;;;;kBAKwBA,K;AALxB;;;;;AAKe,SAASA,KAAT,CAAeC,OAAf,EAAwBC,IAAxB,EAA8B;AAC3C,OAAI,IAAIC,IAAI,CAAR,EAAWC,MAAMF,KAAKG,OAAL,CAAaC,MAAlC,EAA0CH,IAAIC,GAA9C,EAAmDD,GAAnD,EAAwD;AACtDD,SAAKK,UAAL,CAAgBJ,CAAhB,KAAsBD,KAAKG,OAAL,CAAaF,CAAb,IAAkB,CAAlB,GAAsBF,QAAQM,UAAR,CAAmBJ,CAAnB,CAAtB,GAA8C,CAApE;AACD;AACF","file":"relu-b.js","sourcesContent":["/**\n * adds {from} recurrence to {m} recurrence when {m} weights are above other a threshold of 0\n * @param {Matrix} product\n * @param {Matrix} m\n */\nexport default function reluB(product, left) {\n  for(let i = 0, max = left.weights.length; i < max; i++) {\n    left.recurrence[i] += left.weights[i] > 0 ? product.recurrence[i] : 0;\n  }\n}\n"]}