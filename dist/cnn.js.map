{"version":3,"sources":["../src/cnn.js"],"names":["CNN","input","Error","outputs","output","layer","outputLayer","node","sizes","weights","sum","biases","k","length"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;IAEqBA,G;;;;;;;;;;;;AACnB;;;;;6BAKSC,K,EAAO;AACd,YAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;AACA,WAAKC,OAAL,CAAa,CAAb,IAAkBF,KAAlB,CAFc,CAEY;;AAE1B,UAAIG,SAAS,IAAb;AACA,WAAK,IAAIC,QAAQ,CAAjB,EAAoBA,SAAS,KAAKC,WAAlC,EAA+CD,OAA/C,EAAwD;AACtD,aAAK,IAAIE,OAAO,CAAhB,EAAmBA,OAAO,KAAKC,KAAL,CAAWH,KAAX,CAA1B,EAA6CE,MAA7C,EAAqD;AACnD,cAAIE,UAAU,KAAKA,OAAL,CAAaJ,KAAb,EAAoBE,IAApB,CAAd;;AAEA,cAAIG,MAAM,KAAKC,MAAL,CAAYN,KAAZ,EAAmBE,IAAnB,CAAV;AACA,eAAK,IAAIK,IAAI,CAAb,EAAgBA,IAAIH,QAAQI,MAA5B,EAAoCD,GAApC,EAAyC;AACvCF,mBAAOD,QAAQG,CAAR,IAAaX,MAAMW,CAAN,CAApB;AACD;;AAED;AACA,eAAKT,OAAL,CAAaE,KAAb,EAAoBE,IAApB,IAA4B,IAA5B;AACD;AACDH,iBAASH,QAAQ,KAAKE,OAAL,CAAaE,KAAb,CAAjB;AACD;AACD,aAAOD,MAAP;AACD;;;;;;kBA1BkBJ,G","file":"cnn.js","sourcesContent":["import NeuralNetwork from './neural-network';\nimport Convolution from './utilities/convolution';\n\nexport default class CNN extends NeuralNetwork {\n  /**\n   *\n   * @param input\n   * @returns {*}\n   */\n  runInput(input) {\n    throw new Error('not yet implemented');\n    this.outputs[0] = input;  // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      for (let node = 0; node < this.sizes[layer]; node++) {\n        let weights = this.weights[layer][node];\n\n        let sum = this.biases[layer][node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n\n        //TODO: CNN logic here\n        this.outputs[layer][node] = null;\n      }\n      output = input = this.outputs[layer];\n    }\n    return output;\n  }\n}\n"]}